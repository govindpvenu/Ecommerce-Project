
    <div class="container">
        <div class="column1">
            <div>
                <!-- flash message -->
                <% messages.forEach(element=> { %>
                    <div class="alert alert-primary alert-dismissible fade show" role="alert">
                        <%= element %>
                    </div>
                    <% }) %>
            </div>
        <form action="/signup" method="post" role="form" id="form" class="form">
            <h2>Sign up</h2>
            <div class="form-control">
                <label for='username'>Username</label>
                <input type="text" name="name" id="username" placeholder="Enter username">
                <small>Error message</small>
            </div>
            <div class="form-control">
                <label for='email'>Email</label>
                <input type="text" name="email" id="email" placeholder="Enter email">
                <small>Error message</small>
            </div>
            <div class="text-danger">
                <% if (emailErr) { %>
                    <label >Email already registered</label>
                <% } %>
            </div>
            <div class="form-control">
                <label for='phone'>Phone</label>
                <input type="text" name="phone" id="phone" placeholder="Enter phone">
                <small>Error message</small>
            </div>
            <div class="text-danger">
                <% if (phoneErr) { %>
                    <label >Number already registered</label>
                <% } %>
            </div>
            <div class="form-control">
                <label for='password'>Password</label>
                <input type="password" name="password" id="password" placeholder="Enter password">
                <small>Error message</small>
            </div>
            <div class="form-control">
                <label for='Password'>Confirm Password</label>
                <input type="password" name="confirmPassword" id="Password" placeholder="Enter password again ">
                <small>Error message</small>
            </div>
            <button class="submit" id="button" type="submit">Submit</button>
        </form>
    </div>
    <div class="column2">
        <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTMYJAa5jeee5RL2_NgPzeLuqd8ggcDH0BOFFKhfo8Acr4IgX2bwrYUgjzhivY7bDYsWDg&usqp=CAU" alt="pablo-sign-up" border="0" class='signup-image'>
    </div>

</div>

<style>
    @import url('https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap');

    * {
        box-sizing: border-box;
    }

    :root {
        --success-color: #2ecc71;
        --error-color: #e74c3c;
        --checkmark-color: #43b324;
    }

    body {
        background-color: #f9f8fb;
        font-family: 'Poppins',
            sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        padding: 120px;
    }

    .container {
        background-color: #fff;
        border-radius: 20px;
        box-shadow: 0 15px 16.83px 0.17px rgba(0, 0, 0, .05);
        -webkit-box-shadow: 0 15px 16.83px 0.17px rgba(0, 0, 0, .05);
        width: 900px;
        max-width: 1200px;
        padding: 30px;
        display: flex;
    }

    h2 {
        font-size: 36px;
        font-weight: 700;
        color: #222;
        margin: 0 0 30px;

    }

    .column1,
    .column2 {
        width: 50%;
    }

    .column2 .signup-image {
        max-width: 110%;
    }

    .column2 {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .form {
        padding: 30px 50px;
    }

    .form-control {
        margin-bottom: -5px;
        padding-bottom: 25px;
        position: relative;
        border: 0px solid #bdbdbd;
    }

    .form-control label {
        color: #333;
        display: block;
        margin-bottom: 5px;
    }

    .form-control input {
        font-family: 'Poppins',
            sans-serif;
        border: 1px solid #e6e6e6;
        border-radius: 4px;
        display: block;
        width: 100%;
        padding: 10px;
        font-size: 14px;
    }

    .form-control:after {
        content: '\2713';
        font-size: 1.5rem;
        opacity: 0;
        color: var(--checkmark-color);
        position: absolute;
        top: 50%;
        right: 10px;
        transform: translateY(-30%);
        transition: all ease .4s;
    }

    .form-control input:focus {
        outline: none;
        border-color: #777;
    }

    .form-control.success input {
        border-color: var(--success-color);
    }

    .form-control.error input {
        border-color: var(--error-color);
    }

    .form-control.success:after {
        opacity: 1;
        transform: translateY(-50%);
    }

    .form-control small {
        color: var(--error-color);
        position: absolute;
        bottom: 0;
        left: 0;
        visibility: hidden;
    }

    .form-control.error small {
        visibility: visible;
    }

    button {
        cursor: pointer;
        background: #000000;
        border: none;
        border-radius: 5px;
        color: #fff;
        display: inline-block;
        font-size: 16px;
        padding: 15px 39px;
        margin-top: 20px;
        transition: all ease .25s;
    }

    button:hover {
        background: #ffffff;
        color: #000000;
        border: 1px solid #111111;    }

    @media screen and (max-width: 960px) {

        body {
            padding: 80px;
        }

        .container {
            flex-direction: column;
        }

        .column1,
        .column2 {
            width: auto;
        }
    }

    @media screen and (max-width: 600px) {

        body {
            padding: 10px;
        }

        h2 {
            font-size: 25px;
        }

        .form-control input {
            font-size: 12px;
            padding: 5px;
        }

        button {
            padding: 10px 25px;
            font-size: 14px;
        }

        .form {
            padding: 30px 20px;
        }

        .form-control {
            margin-bottom: 5px;
            padding-bottom: 15px;
        }
    }
</style>
<script>

    var error;
    const form = document.getElementById("form");
    const username = document.getElementById("username");
    const email = document.getElementById("email");
    const phone = document.getElementById("phone");
    const password = document.getElementById("password");
    const Password = document.getElementById("Password");

    function showError(input, message) {
        error = true
        const formControl = input.parentElement;
        formControl.className = "form-control error";
        let small = formControl.querySelector("small");
        small.innerText = message;
    }

    function showSuccess(input) {
        const formControl = input.parentElement;
        formControl.className = "form-control success";
    }
    function checkRequired(inputArr) {
        inputArr.forEach(function (input) {
            if (input.value === "") {
                showError(input, `${getFieldName(input)} is required`);
            } else {
                showSuccess(input);
            }
        });
    }
    function checkEmail(input) {
        const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        if (re.test(input.value)) {
            showSuccess(input);
        } else {
            showError(input, "Email is not valid");
        }
    }

    function checkPhone(input) {
        const re = /^\d{10}$/;
        if (re.test(input.value)) {
            showSuccess(input);
        } else {
            showError(input, "Phone is not valid");
        }
    }

    function checkPasswordsMatch(password1, Password) {
        if (password1.value !== Password.value) {
            showError(Password, "Password do not match");
        }
    }

    function checkLength(input, min, max) {
        if (input.value.length < min) {
            showError(
                input,
                `${getFieldName(input)} must be more than ${min} characters`
            );
        } else if (input.value.length >= max) {
            showError(
                input,
                `${getFieldName(input)} must be less than ${max} characters`
            );
        } else {
            showSuccess(input);
        }
    }

    function getFieldName(input) {
        return input.id.charAt(0).toUpperCase() + input.id.slice(1);
    }

    form.addEventListener("submit", function (e) {
        error = false
        checkRequired([username, email, phone, password, Password]);
        checkLength(username, 3, 15);
        checkLength(password, 8, 25);
        checkEmail(email);
        checkPhone(phone);
        if (Password.value !== "") {
            checkPasswordsMatch(password, Password);
        }
        if (error) {
            e.preventDefault();
        }
    });
</script>